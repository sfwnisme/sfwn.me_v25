import type { Metadata } from "next";
import { Inter_Tight, Noto_Kufi_Arabic } from "next/font/google";
import "../globals.css";
import Styles from "./layout.module.css";
import { DictionaryProvider } from "@/context/DictionaryProvider";
import { getDictionary } from "./dictionaries";


const interTight = Inter_Tight({
  subsets: ["latin"],
  display: "swap",
  weight: ["400"],
  variable: "--font-main",
});

const notoKufi = Noto_Kufi_Arabic({
  subsets: ["arabic"],
  display: "swap",
  weight: ["100","200","300","400","500","600","700"],
  variable: "--font-main"
})

export const metadata: Metadata = {
  title: "Sfwn",
  description: "Generated by sfwn",
};

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: { lang: "en" | "ar" }
}>) {

  const dict = await getDictionary(params.lang)

  return (
    <html lang={params.lang === "en"? "en":"ar"} dir={params.lang === "en"? "ltr": "rtl"}>
      <body className={`${params.lang === "en" ?interTight.className : notoKufi.className} ${Styles.layout}`}>
        <DictionaryProvider dictionary={dict}>
          {children}
        </DictionaryProvider>
      </body>
    </html>
  );
}
